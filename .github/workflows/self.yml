name: Selftest

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  selftest:
    if: false
    runs-on: windows-latest
    # ${{ runner.temp }} is undefined here
    steps:
    - uses: actions/checkout@v4
    - name: Checkout conda source code
      uses: actions/checkout@v4
      with:
        repository: conda/conda
        path: conda
    - uses: actions/cache@v4
      with:
        enableCrossOsArchive: true
        # fyi  'CONDA': 'C:\\Miniconda', is also a thing in GHA. In most cases
        # here, \ appears to work fine as a dir separator; when will it fail?

        # runner.temp is on a much faster drive D:\ on Windows runners,
        # otherwise the cache takes too long to restore.

        # exclude .conda, keep unpacked subdirectories of package contents
        path: |
          ${{ runner.temp }}\conda-standalone
          !${{ runner.temp }}\conda-standalone\pkgs\*.conda
        key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('tests\requirements*.txt') }}
    - uses: dholth\action-conda-standalone\setup-conda-standalone@main
    - name: Conda Install
      env:
        # may not be working at jobs: top level?
        CONDA_PKGS_DIRS: ${{ runner.temp }}\conda-standalone\pkgs
      # Use --use-index-cache? (doesn't work if no cache at all)
      # these \ are sent to the shell
      # (conda create will delete old environment if present)
      run: |
          if ( -not (Test-Path -Path ${{ runner.temp }}\conda-standalone\env ) )
          {
            ${{ runner.temp }}\conda-standalone\conda.exe create `
            --yes `
            --prefix ${{ runner.temp }}\conda-standalone\env
          }
          ${{ runner.temp }}\conda-standalone\conda.exe install `
          --prefix ${{ runner.temp }}\conda-standalone\env `
          --yes `
          --file tests\requirements.txt `
          --file tests\requirements-${{ runner.os }}.txt `
          --file tests\requirements-ci.txt `
          --file tests\requirements-s3.txt `
          python=${{ matrix.python-version }}
    - name: Conda Info
      env:
        CONDA_PKGS_DIRS: ${{ runner.temp }}\conda-standalone\pkgs
      run: |
        ${{ runner.temp }}\conda-standalone\conda.exe info
        ${{ runner.temp }}\conda-standalone\env\Scripts\conda.exe info
        dir ${{ env.CONDA_PKGS_DIRS }}
        python -c "import pprint, os; pprint.pprint(dict(os.environ))"
    - name: Run Fast Tests
      env:
        # may not be working at jobs: top level?
        CONDA_PKGS_DIRS: ${{ runner.temp }}\conda-standalone\pkgs
      working-directory: conda
      run: |
        ${{ runner.temp }}\conda-standalone\env\scripts\activate.bat
        pip install hatchling hatch-vcs editables
        pip install -e . --no-index --no-deps --no-build-isolation
        ${{ runner.temp }}\conda-standalone\env\scripts\pytest -k "not slow and not integration" -k gateway
        exit 0
    - name: Clean Tarballs
      env:
        # may not be working at jobs: top level?
        CONDA_PKGS_DIRS: ${{ runner.temp }}\conda-standalone\pkgs
      # Use --use-index-cache? (doesn't work if no cache at all)
      # these \ are sent to the shell
      # (conda create will delete old environment if present)
      run: |
          ${{ runner.temp }}\conda-standalone\conda.exe clean -t -y

  selftest-linux:
    runs-on: ubuntu-latest
    # ${{ runner.temp }} is undefined here
    steps:
    - uses: actions/checkout@v4
    - name: Checkout conda source code
      uses: actions/checkout@v4
      with:
        repository: conda/conda
        path: conda
    - uses: actions/cache@v4
      with:
        enableCrossOsArchive: true
        # fyi  'CONDA': 'C://Miniconda', is also a thing in GHA. In most cases
        # here, / appears to work fine as a dir separator; when will it fail?

        # runner.temp is on a much faster drive D:/ on Windows runners,
        # otherwise the cache takes too long to restore.

        # exclude .conda, keep unpacked subdirectories of package contents

        # This exclude does not work unless the include pattern is in the same
        # subdir. Instead, we clean the .conda archives at the end.
        path: |
          ${{ runner.temp }}/conda-standalone
          !${{ runner.temp }}/conda-standalone/pkgs/*.conda
        key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('tests/requirements*.txt') }}
    - uses: dholth/action-conda-standalone/setup-conda-standalone@main
    - name: Conda Install
      env:
        # may not be working at jobs: top level?
        CONDA_PKGS_DIRS: ${{ runner.temp }}/conda-standalone/pkgs
      # Use --use-index-cache? (doesn't work if no cache at all)
      # these / are sent to the shell
      # (conda create will delete old environment if present)
      run: |
          [[ -x ${{ runner.temp }}/conda-standalone/env ]] || /
            ${{ runner.temp }}/conda-standalone/conda.exe create /
            --yes /
            --prefix ${{ runner.temp }}/conda-standalone/env

          ${{ runner.temp }}/conda-standalone/conda.exe install \
          --prefix ${{ runner.temp }}/conda-standalone/env \
          --yes \
          --file tests/requirements.txt \
          --file tests/requirements-${{ runner.os }}.txt \
          --file tests/requirements-ci.txt \
          --file tests/requirements-s3.txt \
          python=${{ matrix.python-version }}
    - name: Conda Info
      env:
        CONDA_PKGS_DIRS: ${{ runner.temp }}/conda-standalone/pkgs
      run: |
        ${{ runner.temp }}/conda-standalone/conda.exe info
        ${{ runner.temp }}/conda-standalone/env/bin/conda.exe info
        python -c "import pprint, os; pprint.pprint(dict(os.environ))"
        python -m pip list
    - name: Run Fast Tests
      env:
        # may not be working at jobs: top level?
        CONDA_PKGS_DIRS: ${{ runner.temp }}/conda-standalone/pkgs
      working-directory: conda
      run: |
        ${{ runner.temp }}/conda-standalone/env/scripts/activate.bat
        pip install hatchling hatch-vcs editables
        pip install -e . --no-index --no-deps --no-build-isolation
        ${{ runner.temp }}/conda-standalone/env/scripts/pytest -k "not slow and not integration" -k gateway
        exit 0
    - name: Clean Tarballs
      env:
        # may not be working at jobs: top level?
        CONDA_PKGS_DIRS: ${{ runner.temp }}/conda-standalone/pkgs
      # Use --use-index-cache? (doesn't work if no cache at all)
      # these / are sent to the shell
      # (conda create will delete old environment if present)
      run: |
          ${{ runner.temp }}/conda-standalone/conda.exe clean -t -y